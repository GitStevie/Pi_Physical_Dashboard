# Raspberry Pi Physical Dashboard Configuration
#
# Define the widgets in your dashboard below.
#
# Note lines that start with # like this line are commented and will be ignored.
# This file uses the .ini file syntax, see Python's configparser documentation:
#   https://docs.python.org/2/library/configparser.html
#
# Each widget should be defined in a configuration section.  The name of the
# widget is the section name and is specified inside square brackets.  After
# the name options can be specified, one per line.  Each widget MUST have a
# type option that's set to the name of the widget type (see examples below).
# Depending on the type of widget other options can be specified to customize
# the widget.  See the comments in widget examples below for more information.

# Example of a seven segment display called 'cpu'.  The type is SeveSegmentWidget,
# the I2C address of the device is specified as 0x74, and the number of digits
# to show after the decimal point is set to 0.
#[cpu]
#type = SevenSegmentWidget
#address = 0x74
#decimal_digits = 0

# Example of another seven segment display called 'memory'.  This one is at
# address 0x76 and will show two digits after its decimal point.  In addition
# the display will be inverted or flipped vertically.
#[memory]
#type = SevenSegmentWidget
#address = 0x76
#decimal_digits = 2
#invert = true

# Example of another seven segment display called 'uptime'.  This is at address
# 0x71 and will show one digit after its decimal point.  In addition it will
# be justified to the left instead of right.
#[uptime]
#type = SevenSegmentWidget
#address = 0x71
#decimal_digits = 1
#justify_right = false

# Example of a bicolor bargraph called 'happiness'.  This device is at address
# 0x72.
#[happiness]
#type = BicolorBargraph24Widget
#address = 0x72

# Example of a bicolor bargraph called 'foo'.  This device is at address
# 0x75 and is justified to the left instead of right.
#[foo]
#type = BicolorBargraph24Widget
#address = 0x75
#justify_right = false

# Example of a quad alphanumeric display called 'word'.  This device is at
# address 0x73.  Not shown but you can also set decimal_digits and justify_right
# values like with the seven segment displays (see above).
#[word]
#type = AlphaNum4Widget
#address = 0x73

# Example of an automotive stepper motor gauge called 'email'.  This device is
# connected to port M1/M2 on the stepper HAT.  Not shown but you can also
# specify an invert = true option to reverse the direction the stepper moves
# when going forward/backward.  This option is useful if the stepper is wired
# differently and moves the wrong direction.
#[email]
#type = AutoGaugeWidget
#motor_id = 1
